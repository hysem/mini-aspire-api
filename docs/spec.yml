openapi: 3.0.2
info:
  title: Mini Aspire API
  description: |-
    Mini Aspire API is the implementation of the code challenge.
  contact:
    email: hysem101@hotmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: misc
    description: Miscellaneous operations
  - name: user
    description: User operations
  - name: loan
    description: Loan operations
paths:
  /v1/ping:
    get:
      summary: Health check
      description: If the server responds with an OK response with the message `pong` then the server is ready to accept requests.
      operationId: ping
      tags:
        - misc
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PingResponse"
  /v1/user/token:
    post:
      tags:
        - user
      summary: Generate jwt token
      description: Generates a JWT token after validating the given credentials for using protected endpoints.
      operationId: generateToken
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTokenRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTokenResponse'
        '400':
          description: bad request
        '401':
          description: invalid credentials
        '500':
          description: internal server error

  /v1/user/loan:
    post:
      tags:
        - loan
      summary: Request loan
      description: Creates a new loan request
      operationId: createLoan
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLoanRequest'
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLoanResponse'
        '400':
          description: bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
      security: 
        - jwt_auth: []

  /v1/user/loan/:lid/approve:
    patch:
      tags:
        - loan
      summary: Request loan
      description: Creates a new loan request
      operationId: approveLoan
      parameters:
        - in: path
          name: lid
          schema: 
            type: integer
          required: true
          description: ID of the loan to be approved
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveLoanResponse'
        '404':
          description: bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
      security: 
        - jwt_auth: []
components:
  schemas:
    APIResponse:
      type: object
      properties:
        message:
          type: string
          example: "message if any"
        error:
          type: object
          example: "failed reason if any"
        data:
          type: object
          example: "data if any"

    PingResponse:
      type: object
      properties:
        message:
          type: string
          example: "pong"

    GenerateTokenRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: admin1@yopmail.com
        password:
          type: string
          example: 'DWygs6wV'
    
    GenerateTokenResponse:
      type: object
      properties:
        data: 
          type: object
          properties:
            token: 
              type: string
              example: "<generated token>"
    
    RequestLoanRequest:
      type: object
      required:
        - amount
        - terms
        - purpose
      properties:
        email:
          type: number
          format: currency
          example: 10000
        terms:
          type: number
          format: int64
          example: 3
        purpose:
          type: string
          example: for personal use
    RequestLoanResponse:
      type: object
      properties:
        data: 
          type: object
          properties:
            loan_id: 
              type: number
              format: uint64
              example: 1
        message:
          type: string
          example: Loan request created successfully. Pending admin approval.
    
    ApproveLoanResponse:
      type: object
      properties:
        message:
          type: string
          example: Loan approved.
  securitySchemes:
    jwt_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
